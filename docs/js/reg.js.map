{"version":3,"file":"reg.js","mappings":"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","sources":["webpack://gulp-html-scss/./src/js/components/form-registration.component.js","webpack://gulp-html-scss/./src/js/core/component.js","webpack://gulp-html-scss/./src/js/reg.js"],"sourcesContent":["import $ from 'jquery'\nimport 'jquery-validation'\n\nimport Component from \"../core/component\";\n\n/**\n *  Зарегистрировать пользователя\n * */\nexport default class FormRegistrationComponent extends Component {\n  /**\n   *\n   * Конструктор\n   * @param {string} id         - находит компонент.\n   * @param {Object=} options   - конфигурация.\n   */\n  constructor(id,options) {\n\n    super(id,options);\n\n  }\n\n  /**\n   * Интерфейс компонента\n   * @return {void}\n   */\n  init() {\n    this.form = this._validate()\n\n    console.log(this.form)\n  }\n\n  /**\n   * Настройки валидирования формы\n   * @return {Object}\n   */\n  _validate() {\n\n    return $(this.$el).validate({\n      // -> включить режим отладки\n      debug: false,\n\n      // -> настройка полей формы (какие поля валидировать)\n      rules: {\n        email: {\n          required: true,\n          email: true\n        },\n        password: {\n          required: true\n        },\n        repeat_password: {\n          required: true,\n          equalTo: \"#password\"\n        }\n      },\n\n      // -> настройка пользовательских сообщений (для валидируемых полей)\n      messages: {\n        email: {\n          required: 'Пожалуйста, укажите Email',\n          email: 'Пожалуйста, введите действительный адрес электронной почты'\n        },\n        password: {\n          required: 'Пожалуйста, укажите пароль',\n        },\n        repeat_password: {\n          required: 'Пожалуйста, повторите пароль',\n          equalTo: 'Пароли не совпадают'\n        }\n      },\n\n      // -> класс добавляется к полю, если оно валидно (по умолчанию: \"valid\")\n      validClass: 'sForm__valid',\n\n      // -> класс добавляется к сообщению и полю, если оно НЕ валидно (по умолчанию: \"error\")\n      errorClass: 'sForm__invalid',\n\n      // -> тэг который будет создаваться, в него записываться сообщения (по умолчанию: \"label\")\n      errorElement: 'span',\n\n      success: 'sForm__valid-text',\n\n      // переопределяет стили невалидных полей\n      highlight: function(element, errorClass, validClass) {\n        $(element).addClass(errorClass).removeClass(validClass);\n        $(element).next('.sForm__valid-text').removeClass('sForm__valid-text');\n\n        console.log($(element).next('.sForm__valid-text'))\n      },\n\n      // отмены изменений, сделанных опцией highlight\n      unhighlight: function(element, errorClass, validClass) {\n        $(element).removeClass(errorClass).addClass(validClass);\n        $(element).next('.sForm__valid-text').text('Заполненно верно')\n      },\n\n    })\n  }\n}\n","\n/**\n *  Базовый класс для компонентов\n * */\nexport default class Component {\n\n  /**\n   * Конструктор\n   * @param {string} id         - находит или создает компонент.\n   * @param {Object=} options   - конфигурация.\n   * @param {string|null} [options.create] - названи тега, генерировать компонент программно(по умолчанию отбирается со страницы)\n   * @param {string} [options.display] - тип отображения элемента на странице при показе\n   */\n  constructor(id,{\n    create = null,\n    display = 'block'\n  } = {}) {\n\n    (!create) ? this.$el = document.querySelector(id) :\n                this.$el = document.createElement(create)\n                this.$el.setAttribute('id', id.slice(1))\n\n    this._display = display\n  }\n\n  /**\n   * Интерфейс компонента\n   * @return {void}\n   */\n  init() {}\n\n  /**\n   * Скрывает компонент\n   * @return {void}\n   */\n  hide() {\n    this.$el.style.display = 'none'\n\n    this._onHide() // -> после скрытия компонента вызываем метод\n  }\n\n  /**\n   * Показать компонент\n   * @return {void}\n   */\n  show() {\n    this.$el.style.display = this._display\n\n    this._onShow() // -> после показа компонента вызываем метод\n  }\n\n  /**\n   * Действия после скрытия компонента (хук)\n   * @return {void}\n   */\n  _onHide() {\n\n  }\n\n  /**\n   * Действия после показа компонента (хук)\n   * @return {void}\n   */\n  _onShow() {\n\n  }\n\n}\n","import FormRegistrationComponent from \"./components/form-registration.component\";\n\n\nwindow.addEventListener('DOMContentLoaded', () => {\n\n  // Форма регистраии\n  new FormRegistrationComponent('#registration').init()\n\n})\n"],"names":["$","Component","FormRegistrationComponent","constructor","id","options","init","form","_validate","console","log","$el","validate","debug","rules","email","required","password","repeat_password","equalTo","messages","validClass","errorClass","errorElement","success","highlight","element","addClass","removeClass","next","unhighlight","text","create","display","document","querySelector","createElement","setAttribute","slice","_display","hide","style","_onHide","show","_onShow","window","addEventListener"],"sourceRoot":""}