{"version":3,"file":"reg.js","mappings":"wJAIe,MAAMA,EASnBC,YAAYC,GAGJ,IAHO,OACbC,EAAS,KAAI,QACbC,EAAU,SACR,UAAH,6CAAG,CAAC,EAGSC,KAAKC,IADfH,EACqBI,SAASC,cAAcL,GADvBI,SAASE,cAAcP,GAElCG,KAAKC,IAAII,aAAa,KAAMR,EAAGS,MAAM,IAEjDN,KAAKO,SAAWR,CAClB,CAMAS,OAAQ,CAMRC,OACET,KAAKC,IAAIS,MAAMX,QAAU,OAEzBC,KAAKW,SACP,CAMAC,OACEZ,KAAKC,IAAIS,MAAMX,QAAUC,KAAKO,SAE9BP,KAAKa,SACP,CAMAF,UAEA,CAMAE,UAEA,ECxDa,MAAMC,UAAkCnB,EAOrDC,YAAYC,EAAGkB,GAEbC,MAAMnB,EAAGkB,EAEX,CAMAP,OACER,KAAKiB,KAAOjB,KAAKkB,WACnB,CAMAA,YAiBE,OAfAC,OAAOC,UAAUC,cAAc,uBAAwB,CACrDC,UAAU,IAGZH,OAAOC,UAAUC,cAAc,oBAAqB,CAClDC,UAAU,EACVC,OAAO,IAGTJ,OAAOC,UAAUC,cAAc,uBAAwB,CACrDC,UAAU,EACVE,QAAS,cAIJC,IAAEzB,KAAKC,KAAKyB,SAAS,CAE1BC,OAAO,EAGPC,SAAU,CACRL,MAAO,CACLD,SAAU,4BACVC,MAAO,8DAETM,SAAU,CACRP,SAAU,8BAEZQ,gBAAiB,CACfR,SAAU,+BACVE,QAAS,wBAKbO,WAAY,eAGZC,WAAY,iBAGZC,aAAc,OAGdC,QAAS,oBAGTC,UAAW,SAASC,EAASJ,EAAYD,GACvCN,IAAEW,GAASC,SAASL,GAAYM,YAAYP,GAC5CN,IAAEW,GAASG,KAAK,sBAAsBD,YAAY,oBACpD,EAGAE,YAAa,SAASJ,EAASJ,EAAYD,GACzCN,IAAEW,GAASE,YAAYN,GAAYK,SAASN,GAC5CN,IAAEW,GAASG,KAAK,sBAAsBE,KAAK,mBAC7C,GAGJ,ECtFa,MAAMC,UAA2B/C,EAO9CC,YAAYC,EAAGkB,GAEbC,MAAMnB,EAAGkB,EAEX,CAMAP,OACER,KAAKiB,KAAOjB,KAAKkB,WACnB,CAMAA,YAME,OAJAC,OAAOC,UAAUC,cAAc,uBAAwB,CACrDC,UAAU,IAGLG,IAAEzB,KAAKC,KAAKyB,SAAS,CAE1BC,OAAO,EAGPC,SAAU,CACRe,MAAO,CACLrB,SAAU,6BAEZO,SAAU,CACRP,SAAU,+BAKdS,WAAY,eAGZC,WAAY,iBAGZC,aAAc,OAGdO,YAAa,SAASJ,EAASJ,EAAYD,GACzCN,IAAEW,GAASE,YAAYN,GAAYK,SAASN,GAExCN,IAAEW,GAASQ,OACbnB,IAAEW,GAASE,YAAYP,EAE3B,GAEJ,ECrEFc,OAAOC,iBAAiB,oBAAoB,KAGvC5C,SAASE,cAAc,kBACxB,IAAIU,EAA0B,iBAAiBN,OAI9CN,SAASE,cAAc,WACxB,IAAIsC,EAAmB,UAAUlC,MACnC,G,sBCbF,UAEE,EAAQ,CAAC,OAAU,aAA8B,0BAAP,EAM1C,SAAUiB,GAyBZ,OAnBAA,EAAEsB,OAAQtB,EAAEL,UAAUQ,SAAU,CAC/BN,SAAU,iCACV0B,OAAQ,2CACRzB,MAAO,0DACP0B,IAAK,sCACLC,KAAM,uCACNC,QAAS,qDACTC,OAAQ,6BACRC,OAAQ,oCACRC,WAAY,wDACZ9B,QAAS,iDACT+B,UAAW,sDACXC,UAAW/B,EAAEL,UAAUqC,OAAQ,+CAC/BC,UAAWjC,EAAEL,UAAUqC,OAAQ,+CAC/BE,YAAalC,EAAEL,UAAUqC,OAAQ,+DACjCG,MAAOnC,EAAEL,UAAUqC,OAAQ,4CAC3BI,IAAKpC,EAAEL,UAAUqC,OAAQ,sDACzBK,IAAKrC,EAAEL,UAAUqC,OAAQ,wDAEnBhC,CACP,GAhCmD,8B","sources":["webpack://gulp-html-scss/./src/js/core/component.js","webpack://gulp-html-scss/./src/js/components/form-registration.component.js","webpack://gulp-html-scss/./src/js/components/form-entry.component.js","webpack://gulp-html-scss/./src/js/reg.js","webpack://gulp-html-scss/./node_modules/jquery-validation/dist/localization/messages_ru.js"],"sourcesContent":["\n/**\n *  Базовый класс для компонентов\n * */\nexport default class Component {\n\n  /**\n   * Конструктор\n   * @param {string} id         - находит или создает компонент.\n   * @param {Object=} options   - конфигурация.\n   * @param {string|null} [options.create] - названи тега, генерировать компонент программно(по умолчанию отбирается со страницы)\n   * @param {string} [options.display] - тип отображения элемента на странице при показе\n   */\n  constructor(id,{\n    create = null,\n    display = 'block'\n  } = {}) {\n\n    (!create) ? this.$el = document.querySelector(id) :\n                this.$el = document.createElement(create)\n                this.$el.setAttribute('id', id.slice(1))\n\n    this._display = display\n  }\n\n  /**\n   * Интерфейс компонента\n   * @return {void}\n   */\n  init() {}\n\n  /**\n   * Скрывает компонент\n   * @return {void}\n   */\n  hide() {\n    this.$el.style.display = 'none'\n\n    this._onHide() // -> после скрытия компонента вызываем метод\n  }\n\n  /**\n   * Показать компонент\n   * @return {void}\n   */\n  show() {\n    this.$el.style.display = this._display\n\n    this._onShow() // -> после показа компонента вызываем метод\n  }\n\n  /**\n   * Действия после скрытия компонента (хук)\n   * @return {void}\n   */\n  _onHide() {\n\n  }\n\n  /**\n   * Действия после показа компонента (хук)\n   * @return {void}\n   */\n  _onShow() {\n\n  }\n\n}\n","import $ from 'jquery'\nimport 'jquery-validation'\nimport 'jquery-validation/dist/localization/messages_ru'\n\nimport Component from \"../core/component\";\n\n/**\n *  Зарегистрировать пользователя\n * */\nexport default class FormRegistrationComponent extends Component {\n\n  /**\n   * Конструктор\n   * @param {string} id         - находит компонент.\n   * @param {Object=} options   - конфигурация.\n   */\n  constructor(id,options) {\n\n    super(id,options);\n\n  }\n\n  /**\n   * Интерфейс компонента\n   * @return {void}\n   */\n  init() {\n    this.form = this._validate()\n  }\n\n  /**\n   * Настройки валидирования формы\n   * @return {Object}\n   */\n  _validate() {\n\n    jQuery.validator.addClassRules(\"js-required-validate\", {\n      required: true\n    });\n\n    jQuery.validator.addClassRules(\"js-email-validate\", {\n      required: true,\n      email: true\n    });\n\n    jQuery.validator.addClassRules(\"js-password-validate\", {\n      required: true,\n      equalTo: \"#password\"\n    });\n\n\n    return $(this.$el).validate({\n      // -> включить режим отладки\n      debug: false,\n\n      // -> настройка пользовательских сообщений (для валидируемых полей)\n      messages: {\n        email: {\n          required: 'Пожалуйста, укажите Email',\n          email: 'Пожалуйста, введите действительный адрес электронной почты'\n        },\n        password: {\n          required: 'Пожалуйста, укажите пароль',\n        },\n        repeat_password: {\n          required: 'Пожалуйста, повторите пароль',\n          equalTo: 'Пароли не совпадают'\n        }\n      },\n\n      // -> класс добавляется к полю, если оно валидно (по умолчанию: \"valid\")\n      validClass: 'sForm__valid',\n\n      // -> класс добавляется к сообщению и полю, если оно НЕ валидно (по умолчанию: \"error\")\n      errorClass: 'sForm__invalid',\n\n      // -> тэг который будет создаваться, в него записываться сообщения (по умолчанию: \"label\")\n      errorElement: 'span',\n\n      // -> дополнительный класс к сообщению\n      success: 'sForm__valid-text',\n\n      // переопределяет стили невалидных полей\n      highlight: function(element, errorClass, validClass) {\n        $(element).addClass(errorClass).removeClass(validClass);\n        $(element).next('.sForm__valid-text').removeClass('sForm__valid-text');\n      },\n\n      // отмены изменений, сделанных опцией highlight\n      unhighlight: function(element, errorClass, validClass) {\n        $(element).removeClass(errorClass).addClass(validClass);\n        $(element).next('.sForm__valid-text').text('Заполненно верно')\n      },\n\n    })\n  }\n}\n","import $ from 'jquery'\nimport 'jquery-validation'\nimport 'jquery-validation/dist/localization/messages_ru'\n\nimport Component from \"../core/component\";\n\n/**\n *  Вход\n * */\nexport default class FormEntryComponent extends Component {\n\n  /**\n   * Конструктор\n   * @param {string} id         - находит компонент.\n   * @param {Object=} options   - конфигурация.\n   */\n  constructor(id,options) {\n\n    super(id,options);\n\n  }\n\n  /**\n   * Интерфейс компонента\n   * @return {void}\n   */\n  init() {\n    this.form = this._validate()\n  }\n\n  /**\n   * Настройки валидирования формы\n   * @return {Object}\n   */\n  _validate() {\n\n    jQuery.validator.addClassRules(\"js-required-validate\", {\n      required: true\n    });\n\n    return $(this.$el).validate({\n      // -> включить режим отладки\n      debug: false,\n\n      // -> настройка пользовательских сообщений (для валидируемых полей)\n      messages: {\n        login: {\n          required: 'Пожалуйста, укажите логин',\n        },\n        password: {\n          required: 'Пожалуйста, укажите пароль',\n        },\n      },\n\n      // -> класс добавляется к полю, если оно валидно (по умолчанию: \"valid\")\n      validClass: 'sForm__valid',\n\n      // -> класс добавляется к сообщению и полю, если оно НЕ валидно (по умолчанию: \"error\")\n      errorClass: 'sForm__invalid',\n\n      // -> тэг который будет создаваться, в него записываться сообщения (по умолчанию: \"label\")\n      errorElement: 'span',\n\n      // отмены изменений, сделанных опцией highlight\n      unhighlight: function(element, errorClass, validClass) {\n        $(element).removeClass(errorClass).addClass(validClass);\n\n        if(!$(element).val()) {\n          $(element).removeClass(validClass);\n        }\n      }\n    })\n  }\n}\n","import FormRegistrationComponent from \"./components/form-registration.component\";\nimport FormEntryComponent from \"./components/form-entry.component\";\n\nwindow.addEventListener('DOMContentLoaded', () => {\n\n  // Форма регистраии\n  if(document.querySelector('#registration')) {\n    new FormRegistrationComponent('#registration').init()\n  }\n\n  // Форма входа\n  if(document.querySelector('#entry')) {\n    new FormEntryComponent('#entry').init()\n  }\n\n})\n","(function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\t\tdefine( [\"jquery\", \"../jquery.validate\"], factory );\n\t} else if (typeof module === \"object\" && module.exports) {\n\t\tmodule.exports = factory( require( \"jquery\" ) );\n\t} else {\n\t\tfactory( jQuery );\n\t}\n}(function( $ ) {\n\n/*\n * Translated default messages for the jQuery validation plugin.\n * Locale: RU (Russian; русский язык)\n */\n$.extend( $.validator.messages, {\n\trequired: \"Это поле необходимо заполнить.\",\n\tremote: \"Пожалуйста, введите правильное значение.\",\n\temail: \"Пожалуйста, введите корректный адрес электронной почты.\",\n\turl: \"Пожалуйста, введите корректный URL.\",\n\tdate: \"Пожалуйста, введите корректную дату.\",\n\tdateISO: \"Пожалуйста, введите корректную дату в формате ISO.\",\n\tnumber: \"Пожалуйста, введите число.\",\n\tdigits: \"Пожалуйста, вводите только цифры.\",\n\tcreditcard: \"Пожалуйста, введите правильный номер кредитной карты.\",\n\tequalTo: \"Пожалуйста, введите такое же значение ещё раз.\",\n\textension: \"Пожалуйста, выберите файл с правильным расширением.\",\n\tmaxlength: $.validator.format( \"Пожалуйста, введите не больше {0} символов.\" ),\n\tminlength: $.validator.format( \"Пожалуйста, введите не меньше {0} символов.\" ),\n\trangelength: $.validator.format( \"Пожалуйста, введите значение длиной от {0} до {1} символов.\" ),\n\trange: $.validator.format( \"Пожалуйста, введите число от {0} до {1}.\" ),\n\tmax: $.validator.format( \"Пожалуйста, введите число, меньшее или равное {0}.\" ),\n\tmin: $.validator.format( \"Пожалуйста, введите число, большее или равное {0}.\" )\n} );\nreturn $;\n}));"],"names":["Component","constructor","id","create","display","this","$el","document","createElement","querySelector","setAttribute","slice","_display","init","hide","style","_onHide","show","_onShow","FormRegistrationComponent","options","super","form","_validate","jQuery","validator","addClassRules","required","email","equalTo","$","validate","debug","messages","password","repeat_password","validClass","errorClass","errorElement","success","highlight","element","addClass","removeClass","next","unhighlight","text","FormEntryComponent","login","val","window","addEventListener","extend","remote","url","date","dateISO","number","digits","creditcard","extension","maxlength","format","minlength","rangelength","range","max","min"],"sourceRoot":""}