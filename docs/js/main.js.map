{"version":3,"file":"main.js","mappings":"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","sources":["webpack://gulp-html-scss/./src/js/library/sumbiot/core/index.js","webpack://gulp-html-scss/./src/js/library/sumbiot/modules/modal/index.js","webpack://gulp-html-scss/./src/js/library/sumbiot/modules/modal/components/modal.js","webpack://gulp-html-scss/./src/js/modules/burger.js","webpack://gulp-html-scss/./src/js/main.js"],"sourcesContent":["\n/**\n *  Ядро Sumbiot\n * */\nexport default class Core {\n\n  /**\n   * Ширина скролла прокрутки\n   * @return {number}\n   */\n  calcScroll() {\n    let div = document.createElement('div');\n\n    div.style.width = '50px';\n    div.style.height = '50px';\n    div.style.overflowY = 'scroll';\n    div.style.visibility = 'hidden';\n\n    document.body.appendChild(div);\n\n    let scrollWidth = div.offsetWidth - div.clientWidth;\n\n    div.remove();\n\n    return scrollWidth;\n  }\n\n  /**\n   * Переполнение document\n   * @param {string} overflow - переполнения документа\n   * @param {string} marginRight - отступ документа с право\n   * @return {void}\n   */\n  overflowBody(overflow= '',marginRight = '') {\n\n    if (document.body.offsetHeight > document.documentElement.clientHeight) {\n      // проверяем а есть ли скрол вообще\n      document.body.style.overflow = overflow;\n      document.body.style.marginRight = marginRight ? `${marginRight}px` : '';\n    }\n  }\n\n}\n","import Core from \"../../core\"\r\n\r\n/**\r\n *  Модальное окно Ядро\r\n * */\r\nexport default class ModalCore extends Core {\r\n\r\n  /**\r\n   * Добавляет новый метод к модалки, не изменяя исходный код класса(первоначальную реализацию) {паттерн Visitor}\r\n   * @param {Function} visitor - добавляет функционал instanceClass\r\n   * @return {this}\r\n   */\r\n  accept(visitor) {\r\n    visitor(this)\r\n\r\n    return this\r\n  }\r\n}\r\n","import ModalCore from \"../\";\n\n/**\n *  Модальное окно стандарт\n * */\nexport default class Modal extends ModalCore {\n\n  /**\n   * Конструктор\n   * @param {string} triggerSelector - селектор который открывает модальное окно.\n   * @param {string} modalSelector   - селектор модального окна которое мы будем открывать\n   *\n   * @param {Object=}     options                     - конфигурация.\n   *\n   * @param {string}      [options.closeSelector]     - селектор который закрывает модальное окно\n   * @param {boolean}     [options.closeClickOverlay] - будет ли закрываться окно по клику по подложки\n   *\n   * @param {string}      [options.modalGroup]        - группирует модалки в группы\n   *\n   * @param {null|string} [options.modalParent]       - селектор родитель куда вставляем модальное окно.\n   *\n   * @param {boolean}     [options.overflowHidden]    - убрать скролл у документа при появлении модального окна\n   */\n  constructor(triggerSelector, modalSelector,\n              {\n                closeSelector = '[data-sumbiot-modal-close]',\n                closeClickOverlay = true,\n\n                modalGroup = '[data-sumbiot-modal]',\n\n                modalParent = null,\n\n                overflowHidden = false\n              } = {}) {\n\n    super()\n\n    this._trigger = triggerSelector\n\n    this._modalSelector = modalSelector\n    this.modal = document.querySelector(modalSelector)\n\n    this._close = this.modal?.querySelector(closeSelector)\n\n    this._closeClickOverlay = closeClickOverlay || this.modal?.dataset.sumbiotOverlay === 'true' || false\n\n    this._modalGroup = modalGroup\n\n    this._modalParent = modalParent || this.modal?.dataset.sumbiotParent || false\n\n    this._overflowHidden = overflowHidden || (this.modal?.dataset.sumbiotOverflow && this.modal?.dataset.sumbiotOverflow === 'true') || false\n\n  }\n\n  /**\n   * Инициализация модального окона\n   * @return {this|Object}\n   */\n  init() {\n\n    if (!this.modal) {\n      console.log(\"Проверте у всех ли модальных окон, заданы корректные ID\")\n\n      return {}\n    }\n\n    this.hideAllModals()\n\n    this._showHandler()\n\n    this._closeHandler()\n\n    return this\n  }\n\n  /**\n   * Скрывает все модальные окна\n   * @param {boolean} group - скрыть только группу, которые относятся к модальному окну, которое мы хотим показать\n   * @return {void}\n   */\n  hideAllModals(group = false) {\n    let modals;\n\n    if(group) {\n      modals = document.querySelectorAll(`${this._modalGroup.slice(0,this._modalGroup.length - 1)}${this.modal.dataset.sumbiotModal ? `=\"${this.modal.dataset.sumbiotModal}\"` : ''}]`);\n\n      if(!modals.length) {\n        modals = document.querySelectorAll(this._modalGroup)\n      }\n    } else {\n      modals = document.querySelectorAll(this._modalGroup)\n    }\n\n    modals.forEach(modal => {\n      modal.classList.add('animated', 'fadeIn');\n      modal.style.display = 'none';\n    })\n\n    this.overflowBody()\n  }\n\n  /**\n   * Обработчик события клика по элементу который открывает модальное окно\n   * @return {void}\n   */\n  _showHandler() {\n    document.addEventListener('click', (e) => {\n      let target = e.target;\n\n      if (target && target.matches(this._trigger) && target.dataset.sumbiotTarget === this._modalSelector || target && target.parentElement.matches(this._trigger) && target.parentElement.dataset.sumbiotTarget === this._modalSelector) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        if (target.parentElement.matches(this._trigger)){\n          target = target.parentElement\n        }\n\n        this._eventTrigger = target\n        this.show()\n\n        setTimeout(() => target.blur(),150)\n      }\n    }, true)\n  }\n\n  /**\n   * Показать модальное окно\n   * @return {void}\n   */\n  show(){\n    this.hideAllModals(true)\n\n    this._modalPosition()\n\n    this.modal.style.display = 'block';\n  }\n\n  /**\n   * Позицианирует модальное окно в нужное место\n   * @return {void}\n   */\n  _modalPosition(){\n    if (this._overflowHidden) this.overflowBody('hidden',this.calcScroll())\n\n    if(this._modalParent) {\n      const modalParent = this._eventTrigger.closest(this._modalParent) || document.querySelector(this._modalParent) || this._eventTrigger.parentElement\n\n      modalParent.append(this.modal)\n    }\n  }\n\n  /**\n   * Обработчик события клика по элементу который закрывает модальное окно\n   * @return {void}\n   */\n  _closeHandler() {\n    this._close?.addEventListener('click', (e) => {\n      if (e.target) {\n        e.preventDefault()\n\n        this.close()\n      }\n    })\n\n    this.modal?.addEventListener('click', (e) => {\n      if (e.target) {\n        e.stopPropagation()\n\n        this._closeModalOverlay(e)\n      }\n    })\n\n    window.addEventListener(\"keydown\", (e) => {\n      if(e.key === \"Escape\" || e.keyCode === 27) {\n\n        this.hideAllModals()\n\n      }\n    })\n  }\n\n  /**\n   * Скрыть модальное окно\n   * @return {void}\n   */\n  close() {\n    this.overflowBody()\n\n    this.modal.style.display = \"none\";\n  }\n\n  /**\n   * Скрывает модальне окно по клику на подложку\n   * @return {void}\n   */\n  _closeModalOverlay(e) {\n\n    if (e.target === this.modal && this._closeClickOverlay) {\n      this.overflowBody()\n\n      this.modal.style.display = \"none\";\n    }\n  }\n\n}\n","import Modal from '../library/sumbiot/modules/modal/components/modal'\n\n/**\n *  Бургер меню\n * */\nexport default class ModalBurger extends Modal {\n\n  /**\n   * Конструктор\n   * @param {string} triggerSelector - селектор который открывает модальное окно.\n   * @param {string} modalSelector   - селектор модального окна которое мы будем открывать\n   *\n   * @param {Object=}     options                     - конфигурация.\n   *\n   * @param {string}      [options.closeSelector]     - селектор который закрывает модальное окно\n   * @param {boolean}     [options.closeClickOverlay] - будет ли закрываться окно по клику по подложки\n   *\n   * @param {string}      [options.modalGroup]        - группирует модалки в группы\n   *\n   * @param {null|string} [options.modalParent]       - селектор родитель куда вставляем модальное окно.\n   *\n   * @param {boolean}     [options.overflowHidden]    - убрать скролл у документа при появлении модального окна\n   */\n  constructor(triggerSelector,modalSelector,options = {}) {\n\n    super(triggerSelector,modalSelector,options);\n\n    this._trigger = document.querySelector(triggerSelector)\n  }\n\n  /**\n   * Скрывает все модальные окна\n   * @param {boolean} group - скрыть только группу, которые относятся к модальному окну, которое мы хотим показать\n   * @return {void}\n   */\n  hideAllModals(group = false) {\n    let modals;\n\n    if(group) {\n      modals = document.querySelectorAll(`${this._modalGroup.slice(0,this._modalGroup.length - 1)}${this.modal.dataset.sumbiotModal ? `=\"${this.modal.dataset.sumbiotModal}\"` : ''}]`);\n\n      if(!modals.length) {\n        modals = document.querySelectorAll(this._modalGroup)\n      }\n    } else {\n      modals = document.querySelectorAll(this._modalGroup)\n    }\n\n    modals.forEach(modal => {\n      modal.classList.add('animated', 'fadeIn');\n      modal.style.display = 'none';\n    })\n\n    this._trigger.classList.remove('burger--active')\n\n    this.overflowBody()\n  }\n\n  /**\n   * Обработчик события клика по элементу который открывает модальное окно\n   * @return {void}\n   */\n  _showHandler() {\n\n    this._trigger.addEventListener('click', (e) => {\n\n      e.preventDefault()\n      e.stopPropagation()\n\n      if(this._trigger.classList.contains('burger--active')) {\n        this.close()\n      } else {\n        this.show()\n      }\n\n    })\n\n  }\n\n  /**\n   * Показать модальное окно\n   * @return {void}\n   */\n  show(){\n    this.hideAllModals(true)\n\n    this._modalPosition()\n\n    this._trigger.classList.add('burger--active')\n\n    this.modal.style.display = 'block';\n  }\n\n  /**\n   * Обработчик события клика по элементу который закрывает модальное окно\n   * @return {void}\n   */\n  _closeHandler() {\n    this.modal?.addEventListener('click', (e) => {\n      if (e.target) {\n        e.stopPropagation()\n\n        this._closeModalOverlay(e)\n      }\n    })\n\n    window.addEventListener(\"keydown\", (e) => {\n      if(e.key === \"Escape\" || e.keyCode === 27) {\n\n        this.hideAllModals()\n\n      }\n    })\n  }\n\n  /**\n   * Скрыть модальное окно\n   * @return {void}\n   */\n  close() {\n    this.overflowBody()\n\n    this._trigger.classList.remove('burger--active')\n\n    this.modal.style.display = \"none\";\n  }\n\n  /**\n   * Скрывает модальне окно по клику на подложку\n   * @return {void}\n   */\n  _closeModalOverlay(e) {\n\n    if (e.target === this.modal && this._closeClickOverlay) {\n      this.overflowBody()\n\n      this._trigger.classList.remove('burger--active')\n\n      this.modal.style.display = \"none\";\n    }\n  }\n\n}\n","import ModalBurger from './modules/burger'\n\nwindow.addEventListener('DOMContentLoaded', () => {\n\n  // бургер меню\n  new ModalBurger(\n    '.js-burger',\n    '.js-menu',\n    {\n      overflowHidden : true\n    }\n  ).init()\n\n})\n\n"],"names":["Core","calcScroll","div","document","createElement","style","width","height","overflowY","visibility","body","appendChild","scrollWidth","offsetWidth","clientWidth","remove","overflowBody","overflow","marginRight","offsetHeight","documentElement","clientHeight","ModalCore","accept","visitor","this","Modal","constructor","triggerSelector","modalSelector","closeSelector","closeClickOverlay","modalGroup","modalParent","overflowHidden","super","_trigger","_modalSelector","modal","querySelector","_close","_closeClickOverlay","dataset","sumbiotOverlay","_modalGroup","_modalParent","sumbiotParent","_overflowHidden","sumbiotOverflow","init","hideAllModals","_showHandler","_closeHandler","console","log","modals","querySelectorAll","slice","length","sumbiotModal","forEach","classList","add","display","addEventListener","e","target","matches","sumbiotTarget","parentElement","preventDefault","stopPropagation","_eventTrigger","show","setTimeout","blur","_modalPosition","closest","append","close","_closeModalOverlay","window","key","keyCode","ModalBurger","contains"],"sourceRoot":""}